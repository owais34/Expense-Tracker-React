{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","Fragment","IncomeExpenses","amounts","income","expense","className","Transaction","id2","text","sign","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","last","length","onSubmit","e","preventDefault","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a77453df.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","export default (state,action)=>{\n    switch(action.type){\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction=> \n                    transaction.id!== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions:[action.payload,...state.transactions]\n            }\n        default:\n            return state\n    }\n}","import React ,{createContext,useReducer} from 'react'\nimport AppReducer from './AppReducer'\n\n//initial state\nconst initialState={\n    transactions:[]\n}\n\n//Create Context\n\nexport const GlobalContext=createContext(initialState)\n\n//Provider component\n\nexport const GlobalProvider=({children})=>{\n    const [state,dispatch] = useReducer(AppReducer,initialState)\n\n    //Action\n    function deleteTransaction(id){\n        dispatch({\n            type:'DELETE_TRANSACTION',\n            payload:id\n        });\n    }\n\n    function addTransaction(transaction){\n        dispatch({\n            type:'ADD_TRANSACTION',\n            payload:transaction\n        });\n    }\n\n    return (\n        <GlobalContext.Provider value={{transactions:state.transactions,\n        deleteTransaction,\n        addTransaction\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}","import React,{useContext} from 'react'\nimport {GlobalContext} from '../context/GlobalState'\n\n\nexport const Balance = () => {\n    const {transactions} = useContext(GlobalContext)\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n    return (\n        <React.Fragment>\n            <h4>Your Balance</h4>\n            <h1 >${total}</h1>\n        </React.Fragment>\n    )\n}\n","import React,{useContext} from 'react'\nimport {GlobalContext} from '../context/GlobalState'\n\nexport const IncomeExpenses = () => {\n    const {transactions} = useContext(GlobalContext)\n    const amounts = transactions.map(transaction => transaction.amount);\n\n\n    const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n    const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p  className=\"money plus\">+${income}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p  className=\"money minus\">-${expense}</p>\n            </div>\n        </div>\n    )\n}\n","import React,{useContext} from 'react'\nimport {GlobalContext} from '../context/GlobalState'\n\nexport const Transaction = ({id2,text,amount}) => {\n    const sign = amount < 0 ? '-' : '+';\n    const {deleteTransaction}=useContext(GlobalContext)\n\n    return (\n            <li className={amount<0 ? \"minus\":\"plus\"}>\n            {text} <span>{sign}${Math.abs(amount)}</span>\n            <button className=\"delete-btn\" onClick={()=>deleteTransaction(id2)}>x</button>\n            </li>\n\n    )\n}\n","import React,{useContext} from 'react'\nimport {GlobalContext} from '../context/GlobalState'\nimport {Transaction} from './Transaction'\n\nexport const TransactionList = () => {\n    const {transactions} = useContext(GlobalContext)\n    \n    return (\n        <React.Fragment>\n            <h3>History</h3>\n                <ul className=\"list\">\n                {transactions.map(item=>(\n                    <Transaction id={item.id} text={item.text} amount={item.amount} id2={item.id}/>\n                    ))}\n                </ul>\n            \n            \n        </React.Fragment>\n    )\n}\n","import React,{useState,useContext} from 'react'\nimport {GlobalContext} from '../context/GlobalState'\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState('')\n    const [amount, setAmount] = useState(0)\n\n    const {addTransaction}=useContext(GlobalContext)\n    const {transactions}=useContext(GlobalContext)\n    let last=transactions.length\n    let id=0\n    if(last!==0)\n    id=transactions[last-1].id+1\n    \n    const onSubmit=(e)=>{\n        e.preventDefault();\n        const newTransaction={\n            id,\n            text,\n            amount:+amount\n        }\n        addTransaction(newTransaction)\n    }\n\n    return (\n        <React.Fragment>\n            <h3>Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input type=\"text\" value={text} onChange={(e)=>{setText(e.target.value)}} placeholder=\"Enter text...\" />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\">Amount <br />\n            (negative - expense, positive - income)</label>\n                    <input type=\"number\" value={amount} onChange={(e)=>{setAmount(e.target.value)}} placeholder=\"Enter amount...\" />\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </React.Fragment >\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport {Balance} from './components/Balance'\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport {GlobalProvider} from './context/GlobalState'\n \nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header/>\n      <div className=\"container\">\n        <Balance/>\n        <IncomeExpenses/>\n        <TransactionList/>\n        <AddTransaction/>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}